@using BBScoreboard
@{
    Page.Title = "Manage Teams";
    Layout = "~/_SiteLayout.cshtml";
    PageData["SubTitle"] = "Manage";

    if (!AppHelper.CheckLogin(this, true)) { return; }

    var db = new BBScoreboardEntities();
    var items = db.UCTeams;

    if (IsPost)
    {
        var cmd = Request["cmd"];
        if (cmd.Equals("Delete"))
        {
            var idarg = Request["id"];
            if (!idarg.IsEmpty())
            {
                var ids = DataHelper.ParseCommaSeparatedIdList(idarg);
                foreach (var id in ids)
                {
                    var team = db.UCTeams.Find(id);
                    TeamHelper.Delete(team.Id, db);
                }
                db.SaveChanges();
            }
        }
    }
}

@section head{
    <style type="text/css">
        .edit, .delete {
            display: none;
        }

        th.chk {
            width: 15px;
        }
    </style>
}

<div class="row">
    <form method="post" class="col-md-12">
        <a href="~/Manage/TeamEntry" class="btn btn-default">New Team</a>
        <button type="button" class="btn btn-warning edit" id="btn-edit" value="~/Manage/TeamEntry">Edit</button>
        <button type="submit" class="btn btn-danger delete" name="cmd" value="Delete" onclick="return confirm('Delete selected items?')">Delete</button>
        @if (items.Count() > 0)
        {
            <table class="table table-striped table-responsive">
                <thead>
                    <tr>
                        <th class="chk">
                            <input type="checkbox" name="chk-main" value="chk-main" class="chk-main" />
                        </th>
                        <th>Name</th>
                        <th>Team Color</th>
                        <th>Active</th>
                        <th class="muted">Id</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in items)
                    {
                        <tr>
                            <td>
                                <input type="checkbox" class="chk-item" name="id" value="@item.Id" />
                            </td>
                            <td><a href="~/Manage/TeamEntry?Team=@item.Id" @(item.Active ? "" : "class=muted")>@item.Name</a></td>
                            <td>
                                @if (!string.IsNullOrEmpty(item.TeamColor))
                                {
                                    <div style="width: 100px; height: 20px; background-color: @item.TeamColor">&nbsp;</div>
                                }
                            </td>
                            <td><i class="glyphicon glyphicon-@(item.Active ? "ok" : "remove")"></i></td>
                            <td class="muted">@item.Id</td>
                            <td><a href="~/Manage/Players?Team=@item.Id" class="btn btn-xs btn-info"><strong>Players</strong></a></td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </form>
</div>

@section footer {
    <script type="text/javascript">
        $(document).ready(function () {
            var isBatchChange = false;

            // Show/Hide Edit/Delete buttons
            var showHideButtons = function () {
                if (!isBatchChange) { // batch check/uncheck should not be running
                    //var showEdit = false;
                    var showDelete = false;
                    var checkedItems = $('.chk-item:checked');
                    var checkedCount = checkedItems.length;
                    if (checkedCount == 1) {
                        //showEdit = true;
                        showDelete = true;
                    }
                    else if (checkedCount > 1) {
                        //showEdit = false;
                        showDelete = true;
                    }

                    //$('.edit').css('display', showEdit ? 'inline-block' : 'none');
                    $('.delete').css('display', showDelete ? 'inline-block' : 'none');
                }
            }

            // Check/Uncheck all
            $('.chk-main').click(function () {
                isBatchChange = true;
                $('.chk-item').attr('checked', $(this).is(':checked'));
                isBatchChange = false;
                showHideButtons();
            });

            // Trigger for any checked/unchecked item
            $('.chk-item').change(function () {
                showHideButtons();
            });

            //$('#btn-edit').click(function () {
            //    var checkedItem = $('.chk-item:checked');
            //    location.href = $(this).val() + '?Team=' + checkedItem[0].value;
            //});
        });
    </script>
}