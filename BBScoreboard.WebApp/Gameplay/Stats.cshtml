@using BBScoreboard
@{
    Page.Title = "Game Stats";
    Layout = "~/_SiteLayout.cshtml";
    PageData["SubTitle"] = "Gameplay";

    if (!AppHelper.CheckLogin(this, true)) { return; }

    var query = new WebQuery(this);
    var gameId = query.GetId("Game");
    if (gameId == -1)
    {
        Response.Redirect("~/", false);
        return;
    }

    var gameplay = GameplayModel.Create(gameId);
    var game = gameplay.Game;
}

@section head{
    <style type="text/css" media="print">
        body {
            padding-top: 0;
        }

        td, th {
            font-size: 11px !important;
            border-top-width: 1px;
        }
    </style>
}

@if (game.IsStarted)
{
    var currentTimer = GameHelper.ComputeTimeRemaining(game);
    var isTimerOn = currentTimer.Ticks == UCConstants.BaseDate.Ticks ? false : game.IsTimeOn;

    var ts = new UCGameTeamStat[2];
    ts[0] = gameplay.TeamModels[0].Stat;
    ts[1] = gameplay.TeamModels[1].Stat;

    var tsCss = new bool[2];
    tsCss[0] = ts[0].LastUpdate > ts[1].LastUpdate;
    tsCss[1] = ts[1].LastUpdate > ts[0].LastUpdate;

    var t = query.GetInt32("Team", -1); // just 0 or 1, not the id
    var q = query.GetInt32("Quarter", 0);
    var showEmpty = query.GetBool("Empty", false);

    var teams = new List<int>();
    if (t > -1)
    {
        teams.Add(t);
    }
    else
    {
        teams.Add(0);
        teams.Add(1);
    }

    <input type="hidden" id="baseUrl" value="~/Gameplay/Stats" />
    <input type="hidden" id="game" value="@game.Id" />
    <input type="hidden" id="team" value="@t" />
    <input type="hidden" id="quarter" value="@q" />

    <div class="row">
        <div class="col-md-12">
            <h3 class="pull-left">@gameplay.Season.Name - Game @game.GameNumber</h3>
            <div class="pull-right hidden-print">
                <label class="checkbox-inline">
                    <input type="checkbox" id="chkEmptyPlayers" checked="@showEmpty"> Empty Players
                </label>
                <button class="btn btn-default" onclick="location.href=location.href">Refresh</button>
                <select id="cboTeam" style="width: auto; display: initial" class="form-control">
                    <option value="-1" @(t == -1 ? "selected=selected" : "")>ALL</option>
                    @for (int i = 0; i < 2; i++)
                    {
                        var t1 = gameplay.TeamModels[i].Team;
                        <option value="@i" @(i == t ? "selected=selected" : "")>@t1.Name</option>
                    }
                </select>
                <select id="cboQuarter" style="width: auto; display: initial" class="form-control">
                    <option value="-1" @(q == -1 ? "selected=selected" : "")>ALL</option>
                    <option value="" @(q == 0 ? "selected=selected" : "")>OVERALL</option>
                    @for (int i = 1; i <= 4; i++)
                    {
                        <option value="@i" @(i == q ? "selected=selected" : "")>@i.ToString()</option>
                    }
                </select>
                &nbsp;
                <button class="btn btn-default" data-toggle="modal" data-target="#exportToPDF">To PDF</button>
                <div class="modal fade" id="exportToPDF" tabindex="-1" role="dialog" aria-labelledby="pdfModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                <h4 class="modal-title" id="pdfModalLabel">Export to PDF</h4>
                            </div>
                            <div class="modal-body">
                                If you are using Chrome:
                                <ol>
                                    <li>Click the "Export to PDF" button.</li>
                                    <li>On the Print window, set Destination as "Save as PDF".</li>
                                    <li>Set the Layout to Landscape.</li>
                                    <li>Under Options, uncheck all items.</li>
                                    <li>Click the Save button.</li>
                                </ol>
                                <div>&nbsp;</div>
                                If you are using any other browser:
                                <ol>
                                    <li>Download and install the BullZip PDF Printer <a target="_blank" href="http://www.bullzip.com/products/pdf/download.php#CommunityEdition">here</a>.</li>
                                    <li>After installing the app, click the "Export to PDF" button.</li>
                                    <li>On the Print window, set printer to "Bullzip PDF Printer".</li>
                                    <li>Under printer properties, set the Layout to Landscape.</li>
                                    <li>Click Print/OK button. (Some of the steps may vary a bit depending on your browser.)</li>
                                </ol>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                <button type="button" class="btn btn-primary" onclick="beginPrint()">Export to PDF</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-md-12">
            <h4>
                Teams @(q > 0 ? "Q" + q : "Overall")
            </h4>
            @*<div>
                    <div style="width: 100%; height: 20px; background-color: @team.TeamColor; float: left">&nbsp;</div>
                </div>*@
            <table class="table table-striped table-hover table-stats table-condensed">
                <thead>
                    <tr>
                        <th>TEAM</th>
                        <th>PTS</th>
                        <th>FGm/a</th>
                        <th>FG %</th>
                        <th>3FGm/a</th>
                        <th>3FG %</th>
                        <th>FTm/a</th>
                        <th>FT %</th>
                        <th>REB-d/o</th>
                        <th>REB</th>
                        <th>AST</th>
                        <th>STL</th>
                        <th>BLK</th>
                        <th>TO</th>
                        <th>PF</th>
                        <th>TF</th>
                    </tr>
                </thead>
                <tbody>
                    @{
    foreach (var ti in teams)
    {
        var team = gameplay.TeamModels[ti].Team;
        var teamModel = gameplay.TeamModels[ti];
        var playerModels = teamModel.PlayerModels;
        var players = teamModel.Players;

        var pstats = q <= 0 ? teamModel.PlayerStats : teamModel.PlayerStats.Where(i => i.Quarter == q);
        var pstat = new UCGamePlayerStat();

        foreach (var ps in pstats)
        {
            pstat.ASSIST += ps.ASSIST;
            pstat.BLOCK += ps.BLOCK;
            pstat.FGA += ps.FGA;
            pstat.FGA3 += ps.FGA3;
            pstat.FGM += ps.FGM;
            pstat.FGM3 += ps.FGM3;
            pstat.FOULPER += ps.FOULPER;
            pstat.FOULTECH += ps.FOULTECH;
            pstat.FTA += ps.FTA;
            pstat.FTM += ps.FTM;
            pstat.REBDEF += ps.REBDEF;
            pstat.REBOFF += ps.REBOFF;
            pstat.STEAL += ps.STEAL;
            pstat.TURNOVER += ps.TURNOVER;
        }

        <tr class="player-handle">
            <td class="ps-no">
                <div class="hidden-print" style="width: 40px; height: 20px; background-color: @team.TeamColor; float: left"></div><strong style="float: left">&nbsp;@team.Name</strong>
            </td>
            <td class="ps-PTS">@PlayerHelper.GetPoints(pstat)</td>
            <td class="ps-FG">@pstat.FGM/@pstat.FGA</td>
            <td class="ps-FG">@(pstat.FGA == 0 ? "0.000" : (pstat.FGM / (double)pstat.FGA).ToString("0.000"))%</td>
            <td class="ps-3FG">@pstat.FGM3/@pstat.FGA3</td>
            <td class="ps-3FG">@(pstat.FGA3 == 0 ? "0.000" : (pstat.FGM3 / (double)pstat.FGA3).ToString("0.000"))%</td>
            <td class="ps-3FG">@pstat.FTM/@pstat.FTA</td>
            <td class="ps-3FG">@(pstat.FTA == 0 ? "0.000" : (pstat.FTM / (double)pstat.FTA).ToString("0.000"))%</td>
            <td class="ps-RB">@pstat.REBDEF/@pstat.REBOFF</td>
            <td class="ps-RB">@(pstat.REBOFF + pstat.REBDEF)</td>
            <td class="ps-AST">@pstat.ASSIST</td>
            <td class="ps-STL">@pstat.STEAL</td>
            <td class="ps-BLK">@pstat.BLOCK</td>
            <td class="ps-TO">@pstat.TURNOVER</td>
            <td class="ps-PF">@pstat.FOULPER</td>
            <td class="ps-TF">@pstat.FOULTECH</td>
        </tr>
    }
                    }
                </tbody>
            </table>
        </div>
    </div>


    foreach (var ti in teams)
    {
        var team = gameplay.TeamModels[ti].Team;
        var teamModel = gameplay.TeamModels[ti];
        var players = teamModel.Players;
        var pstats = q < 1 ? teamModel.PlayerStats : teamModel.PlayerStats.Where(i => i.Quarter == q);
        var stats = pstats;
        var showMoreStats = true;
        var currQ = q;
        while (showMoreStats)
        {
            if (q < 1)
            {
                if (q == 0 || currQ == q && q == -1)
                {
                    currQ = 0;
                }
                else
                {
                    currQ++;
                    stats = pstats.Where(i => i.Quarter >= currQ);
                    //if (currQ == 4)
                    //{
                    //    stats = pstats.Where(i => i.Quarter >= q);
                    //}
                    //else
                    //{
                    //    stats = pstats.Where(i => i.Quarter == q);
                    //}
                }
            }

            @RenderPage("_StatsPlayers.cshtml", new { Team = team, PStats = stats, Players = players, Quarter = currQ, ShowEmpty=showEmpty })

            if (q == -1 && currQ == 4 || q != -1)
            {
                showMoreStats = false;
            }
        }
    }

    @section footer{
        <script>
            $(document).ready(function () {
                var buildUrl = function (t, q) {
                    var baseUrl = $('#baseUrl').val();
                    var game = $('#game').val();
                    var empty = $('#chkEmptyPlayers').is(':checked') ? 1 : 0;
                    var team = t === undefined ? $('#team').val() : t;
                    var quarter = q === undefined ? $('#quarter').val() : q;

                    location.href = baseUrl + '?Game=' + game + '&Team=' + team + '&Quarter=' + quarter + '&Empty=' + empty;
                }

                $('#cboTeam').change(function () {
                    buildUrl($(this).val());
                });

                $('#cboQuarter').change(function () {
                    buildUrl(undefined, $(this).val());
                });

                $('#chkEmptyPlayers').change(function () {
                    buildUrl();
                });
            });

            function beginPrint() {
                $('#exportToPDF').modal('hide');
                window.print();
            }
        </script>
    }
}
else
{
    <h3 style="font-weight: normal">Game has not started, so no stats yet :)</h3>
}