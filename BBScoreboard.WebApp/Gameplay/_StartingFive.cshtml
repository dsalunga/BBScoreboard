@using BBScoreboard
@{
    GameplayModel gameplay = Page.GamePlay;
    UCGame game = Page.Game;
    var user = AppHelper.GetCurrentUser();
}

@if (Page.RenderPage)
{
    <h2>Starting Five (5)</h2>
    <form method="post">
        <div class="row">
            @for (int i = 0; i < 2; i++)
            {
                var teamModel = gameplay.TeamModels[i];
                var team = teamModel.Team;

                <div class="col-md-6">
                    <div>
                        <h3>
                            @team.Name
                            <div style="width: 100%; height: 20px; background-color: @team.TeamColor; float: left">&nbsp;</div>
                        </h3>
                    </div>
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <td></td>
                                <td>PLAYER</td>
                                <td>POSITION</td>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var playerModel in teamModel.PlayerModels)
                            {
                                var player = playerModel.Player;
                                if (player.Active)
                                {
                                    <tr>
                                        <td style="width: 15px">
                                            <input type="checkbox" id="chk-item-@i@player.Id" style="margin: initial" class="chk-item chk-item@(i)" name="players@(i)" value="@player.Id" />
                                        </td>
                                        <td class="player-handle">
                                            <label for="chk-item-@i@player.Id"><span class="badge badge-inverse">@player.PlayerNumber</span> <strong>@player.FirstName.Substring(0, 1). @player.LastName</strong></label>
                                        </td>
                                        <td>
                                            <label for="chk-item-@i@player.Id">@playerModel.Position.Name</label>
                                        </td>
                                    </tr>
                                }
                            }

                        </tbody>
                    </table>
                </div>
            }
        </div>
        @if (AppHelper.EnableTimer)
        {
            <div>
                <label for="smm" style="display: inline">
                    Game Time (minutes):&nbsp;<select id="smm" name="smm" style="width: auto">
                        @for (int i = 1; i <= 59; i++)
                        {
                            <option value="@i" @(i == 20 ? "selected=selected" : "")>@(i)</option>
                        }
                    </select>
                </label>
                &nbsp;&nbsp;<label for="autoTimer" style="display: inline"><input id="autoTimer" type="checkbox" name="auto-timer" style="margin: auto" value="1" />&nbsp;Auto-start Timer</label>
            </div>
        }
        <br />
        @if (user.Access != (int)AccessType.ReadOnly)
        {
            <button type="submit" name="cmd" id="btn-start" value="Start" class="btn btn-large btn-success">Start Game</button>
        }
    </form>
}
else
{
    <script>
        $(document).ready(function () {
            $('#btn-start').prop("disabled", true);

            // Trigger for any checked/unchecked item
            $('.chk-item').change(function () {
                var checkedItems1 = $('.chk-item0:checked');
                var checkedItems2 = $('.chk-item1:checked');
                var checkedCount1 = checkedItems1.length;
                var checkedCount2 = checkedItems2.length;
                var disableStart = !(checkedCount1 == 5 && checkedCount2 == 5);

                $('#btn-start').prop("disabled", disableStart);
            });

            var checkGameStarted = function(){
                var dataArgsJson = {
                    gameId : @game.Id
                    }

                var dataArgs = JSON.stringify(dataArgsJson);

                $.ajax({
                    type: "POST", url: "/GameplaySync.asmx/IsGameStarted",
                    data: dataArgs, contentType: "application/json; charset=utf-8", dataType: "json",
                    success: function (data) {
                        if(data && data.d == 1){
                            location.href = location.href;
                        } else {
                            setTimeout(checkGameStarted, 800);
                        }
                    },
                    error: function (request, status, error) {
                        console.log("[SendAction] An error has occurred, args: " + dataArgs);
                        // Must retry up to 3 times
                    }
                });
            }
            checkGameStarted();
        });
    </script>
}